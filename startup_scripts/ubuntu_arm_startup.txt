Content-Type: multipart/mixed; boundary="//"
MIME-Version: 1.0

--//
Content-Type: text/cloud-config; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="cloud-config.txt"

#cloud-config
cloud_final_modules:
- [scripts-user, always]

--//
Content-Type: text/x-shellscript; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="userdata.txt"

#!/bin/bash
cd /home/ubuntu

# Update packages and install Docker + Git using apt-get (Ubuntu style)
sudo apt-get update -y
sudo apt-get install -y docker.io git
sudo systemctl start docker
sudo systemctl enable docker

# Switch to 'ubuntu' and run the following commands
sudo -u ubuntu -i bash << 'EOF'
# Download and install the ARM64 (aarch64) Miniconda
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh -O /home/ubuntu/Miniconda3-latest-Linux-aarch64.sh
bash /home/ubuntu/Miniconda3-latest-Linux-aarch64.sh -b -p /home/ubuntu/miniconda3
rm /home/ubuntu/Miniconda3-latest-Linux-aarch64.sh

# Initialize conda for bash shell
/home/ubuntu/miniconda3/bin/conda init

# Create a new conda environment
/home/ubuntu/miniconda3/bin/conda create --name fmbench_python311 -y python=3.11 ipykernel

# Activate the environment and attempt to install fmbench
source /home/ubuntu/miniconda3/bin/activate fmbench_python311

# Set the flag for latest version
fmbench_latest="__fmbench_latest__"  # You can set this to "False" to use pip install

# Conditional installation based on fmbench_latest flag
if [ "$fmbench_latest" = "True" ]; then
    # Install poetry
    pip install poetry
    
    # Clone the repository
    git clone https://github.com/aws-samples/foundation-model-benchmarking-tool.git
    
    # Change to the repository directory
    cd foundation-model-benchmarking-tool
    
    # Build using poetry
    poetry build
    
    # Install the built package
    pip install dist/*.whl
else
    # Install fmbench directly from pip
    pip install -U fmbench
fi

# Add ubuntu user to the docker group and reload group memberships
sudo usermod -a -G docker $USER
newgrp docker

# Clone the vLLM project repository from GitHub
git clone https://github.com/vllm-project/vllm.git

# Change the directory to the cloned vLLM project
cd vllm

# Build a Docker image using the provided Dockerfile for CPU, with a shared memory size of 4GB
sudo docker build -f Dockerfile.arm -t vllm-cpu-env --shm-size=4g .

# Install Docker Compose plugin
DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
mkdir -p $DOCKER_CONFIG/cli-plugins
sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) \
     -o $DOCKER_CONFIG/cli-plugins/docker-compose
sudo chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
docker compose version

# Download content from S3 using the provided script
curl -s https://raw.githubusercontent.com/aws-samples/foundation-model-benchmarking-tool/main/copy_s3_content.sh | sh -s -- /tmp
echo "__HF_TOKEN__" > /tmp/fmbench-read/scripts/hf_token.txt

# Add the conda environment activation and directory navigation to .bashrc
echo 'source /home/ubuntu/miniconda3/bin/activate fmbench_python311' >> /home/ubuntu/.bashrc

source /home/ubuntu/.bashrc
touch /tmp/startup_complete.flag
EOF
